% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parsers.R
\name{readPlateData}
\alias{readPlateData}
\title{Read Plate Data}
\usage{
readPlateData(files, type, data.ids, verb = TRUE, interpolate = TRUE,
  time.conversion, ...)
}
\arguments{
\item{files}{list of one or more data files}

\item{type}{pre-defined formats, as exported from platereaders; currently
for BMG Optima/Mars, ('BMG') and Synergy Mx ('Synergy').}

\item{data.ids}{an optional sub-selection of data types in the input file,
as a list of strings}

\item{verb}{print messages if true}

\item{interpolate}{if true a master time, the average time between distinct
measurements of one timepoint, is calculated and all values are interpolated
to this mastertime. This is currently obligatory for further processing.
See function \code{\link{interpolatePlateTimes}} for details.}

\item{time.conversion}{conversion factor for the plate time, e.g., 1/3600
to convert from hours to seconds}

\item{...}{further parameters to plate-reader specific parsing functions}
}
\value{
a list of distinct measurement time-courses from one plate
}
\description{
Parses data files in CSV, as exported by
the plate reader software. Header IDs in the data file should match with 
IDs in the plate map, see \code{\link{readPlateMap}}. Pre-defined read-in
functions exist for a couple of plate-readers. If your format is
not implement, you can manually create simple data tables and use 
the function \code{\link{readSimplePlate}}
}
\note{
The original data is all interpolated to a common/average 'master' time
}
\examples{
data.file <- system.file("extdata", "AP12.csv", package = "platexpress")
raw <- readPlateData(files=data.file, type="Synergy", 
                     data.ids=c("600","YFP_50:500,535"), 
                     dec=",", time.format="\%H:\%M:\%S")
}
\seealso{
\code{\link{readSimplePlate}}, \code{\link{readBMGPlate}}, \code{\link{readSynergyPlate}}, \code{\link{readPlateMap}}, \code{\link{viewPlate}}
}
\author{
Rainer Machne \email{raim@tbi.univie.ac.at}
}
